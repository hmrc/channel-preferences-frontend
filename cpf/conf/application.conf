# Copyright 2021 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "frontend.conf"

appName = "channel-preferences-frontend"
play.http.router = prod.Routes

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform frontend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.frontend.FrontendModule"
play.http.filters = "uk.gov.hmrc.play.bootstrap.frontend.filters.FrontendFilters"

#play.modules.enabled += "config.PreferencesFrontendModule"

# Default http client
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"

# Custom error handler
play.http.errorHandler = "uk.gov.hmrc.channelpreferencesfrontend.config.ErrorHandler"

play.filters.headers.contentSecurityPolicy = "default-src 'self' 'unsafe-inline' localhost:9053 localhost:9032 www.google-analytics.com data:"

api.version = ${?APP_VERSION}   #Set via env var, injected automatically on k8s

# Play Modules
# ~~~~
# Additional play modules can be added here

play.modules.enabled += "uk.gov.hmrc.channelpreferencesfrontend.config.DIModule"

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
# Not set here so that MDTP frontends share the same secret key in the local environment
# (see common.conf in frontend-bootstrap).
# In server environments the secret comes from app-config-common
# play.http.secret.key="boWTRoEElGJGRLQWG48FEhiAtdPrs8BAHF4CTStUmMb9A67qZYtLBGg2axBkYRU9"

microservice {
  metrics {
    graphite {
      host = localhost
      port = 2003
      prefix = play.${appName}.
      enabled = false
    }
  }

  services {
    channel-preferences {
      protocol = http
      host = localhost
      port = 9052
    }
  }
}

metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = true
  enabled = true
}

auditing {
  enabled = true
  traceRequests = true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

google-analytics {
  token = N/A
  host = auto
}

footerLinkItems = ["cookies", "privacy", "termsConditions", "govukHelp"]


preferencesFrontendUrl = "http://localhost:9053"

play.i18n.langs = ["en", "cy"]

abTesting.cohort.IPage7.enabled = true
abTesting.cohort.IPage8.enabled = true
abTesting.cohort.TCPage9.enabled = true
abTesting.cohort.ReOptInPage10.enabled = true
abTesting.cohort.ReOptInPage52.enabled = true

optimizely {
  projectId = 8461600066
}

play.filters.headers.contentSecurityPolicy= "script-src https://www.googletagmanager.com https://tagmanager.google.com *.optimizely.com optimizely.s3.amazonaws.com 'self' 'unsafe-inline' localhost:9000 localhost:9032 www.google-analytics.com data:; style-src https://tagmanager.google.com https://fonts.googleapis.com 'self' 'unsafe-inline' localhost:9000 localhost:9032 www.google-analytics.com data:; img-src 'self' 'unsafe-inline' https://ssl.gstatic.com www.gstatic.com https://www.google-analytics.com localhost:9000 localhost:9032 www.google-analytics.com data:; font-src https://ssl.gstatic.com www.gstatic.com https://fonts.gstatic.com https://fonts.googleapis.com 'self' 'unsafe-inline' localhost:9000 localhost:9032 www.google-analytics.com data:; frame-src 'self' https://www.googletagmanager.com 'unsafe-inline' localhost:9000 localhost:9032 www.google-analytics.com data:;"
play.filters.csrf.contentType.whiteList.0 = "application/json"
play.modules.enabled += "com.kenshoo.play.metrics.PlayModule"


play.allowGlobalApplication = true

reoptIn {
  switchOn = false
}

include "sa_prefs.conf"

platform.frontend.host = "http://localhost:12346"
accessibility-statement.path = "/accessibility-statement"
accessibility-statement.service-path = "/paperless"

survey.ReOptInPage10.enabled = true

CPFUrl = "http://localhost:9053"

auditing {
  enabled = true
  traceRequests = true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

microservice {
  services {
    timeout = 5 seconds

    delay-response = 2 seconds

    protocol = http

    auth {
      host = localhost
      port = 8500
    }

    datastream {
      host=localhost
      port=8100
    }

    entity-resolver {
      host=localhost
      port=8015
      circuitBreaker {
        numberOfCallsToTriggerStateChange = 50
        unavailablePeriodDurationInSeconds = 120
        unstablePeriodDurationInSeconds = 120
      }
    }

    preferences {
      host=localhost
      port=8025
    }

    email {
      host=localhost
      port=8300
      circuitBreaker {
        numberOfCallsToTriggerStateChange = 5
        unavailablePeriodDurationInSeconds = 120
        unstablePeriodDurationInSeconds = 120
      }
    }

    hmrc-deskpro {
      host=localhost
      port=8650
    }

    message {
      host=localhost
      port=8910
    }

    auth-login-api {
      host=localhost
      port=8585
    }

    mailgun {
      host=localhost
      port=8086
    }

  }
}
