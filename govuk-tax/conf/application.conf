# This is the main configuration file for the application.
# ~~~~~

# Session Timeout
# ~~~~
# The default session timeout for the app is 15 minutes (900seconds).
# Updating this is the responsibility of the app - it must issue a new cookie with each request or the session will
# timeout 15 minutes after login (regardless of user activity).
session.maxAge=900

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="yNhI04vHs9<_HWbC`]20u`37=NGLGYY5:0Tg5?y`W<NoJnXWqmjcgZBec@rOxb^G"

# Base 64 encoded MD5 hash of application.secret
cookie.encryption.key="gvBoGdgzqG1AarzF1LY0zQ=="

sso.encryption.key="P5xsJ9Nt+quxGZzB4DeLfw=="

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
application.global=config.Global

# Router 
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point. 
# Furthermore, it's assumed your route file is named properly. 
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes


# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
    name = govuk-tax
    rateUnit = SECONDS
    durationUnit = SECONDS
    showSamples = true
    jvm = true
    enabled = true
}

govuk-tax {

    Dev {
        metrics {
            graphite {
                host = graphite
                port = 2003
                prefix = play.tax.
                enabled = false
            }
        }

        portal {
            ssoUrl="http://localhost:8080/portal/ssoin"
            destinationRoot="http://localhost:8080/portal"
            domainWhiteList=[
                localhost
            ]
            loggedOutUrl="http://localhost:8080/portal/loggedout"
            ssoInLogoutUrl="http://localhost:8080/portal/ssoin/logout?host=http://localhost:9000"
            destinationPath.saViewAccountDetails="/self-assessment/<affinitygroup>/<utr>/account"
            destinationPath.saFileAReturn="/self-assessment-file/<year>/<affinitygroup>/<utr>/return"
            destinationPath.home="/home"
            destinationPath.vatAccountDetails="/home"
            destinationPath.vatFileAReturn="/home"
            destinationPath.vatOnlineAccount="/vat/trader/<vrn>/directdebit"
            destinationPath.ctAccountDetails="/corporation-tax/org/<ctutr>/account/balanceperiods"
            destinationPath.ctDirectDebits="/directdebits/welcome"
            destinationPath.ctFileAReturn="/corporation-tax/org/<ctutr>"
            destinationPath.otherServicesEnrolment="/home/services/enroll"
            destinationPath.managedtaxes.servicesHome="/home/services"
            destinationPath.managedtaxes.emcs="/emcs"
            destinationPath.managedtaxes.ics="/ics"
            destinationPath.managedtaxes.machinegames="/machine-games-duty"
            destinationPath.managedtaxes.ncts="/nctsPortalWebApp/ncts.portal?_nfpb=true&pageLabel=httpssIPageOnlineServicesAppNCTS_Home"
            destinationPath.managedtaxes.nova="/nova"
            destinationPath.managedtaxes.er1="/er1/eroom"
            destinationPath.managedtaxes.ecsl="/ecsl/httpssl/start.do"
            destinationPath.managedtaxes.euvat="/eu-vat"
            destinationPath.managedtaxes.rcsl="/rcsl/httpsslHome.do"
        }

        platform {
            frontend {
                protocol=http
                host=localhost
                port=9000
            }
        }

        services {
            timeout = 5 seconds

            delay-response = 2 seconds

            protocol=http

            auth {
                host=localhost
                port=8500
            }

            ct {
                host=localhost
                port=8647
            }

            datastream {
                host=localhost
                port=8100
                enabled=false
                traceRequests=false
            }

            keystore {
                host=localhost
                port=8400
            }

            paye {
                host=localhost
                port=8600
            }

            matching {
                host=localhost
                port=8520
            }

            saml {
                host=localhost
                port=8080
            }

            sa {
                host=localhost
                port=8900
            }

            txqueue {
                host=localhost
                port=8700
            }

            vat {
                host=localhost
                port=8880
            }

            agent {
                 host=localhost
                 port=8420
            }

            epaye {
                 host=localhost
                 port=8090
            }
        }
    }
    Prod {
        metrics {
            graphite {
                host = graphite
                port = 2003
                prefix = play.tax.
                enabled = true
            }
        }

        services {
            timeout = 30 seconds

            auth {
                host=auth.service
                port=80
            }

            ct {
                host=ct.service
                port=80
            }

            datastream {
                host=datastream.service
                port=80
                enabled=true
                requestEnabled=false
            }

            keystore {
                host=key-store.service
                port=80
            }

            government-gateway {
                host=government-gateway.service
                port=80
            }

            matching {
                host=matching.service
                port=80
            }

            saml {
                host=saml.service
                port=80
            }

            sa {
                host=sa.service
                port=80
            }

            paye {
                host=paye.service
                port=80
            }

            txqueue {
                host=txqueue.service
                port=80
            }

            vat {
                host=vat.service
                port=80
            }

            agent {
                host=agent.service
                port=80
            }

            epaye {
                 host=epaye.service
                 port=80
            }
       }
    }
}
